git status    - To check if git is initialized on the directory
git init      - To initialize the directors to git
git add <filename>   - To stage a file to git
git add .     - To add all file in the directory (Please, add the file one after the other, commit the first file before adding the other)
git log       - To show commit logs
git log --oneline  - To show git logs in oneline
git config --global core.editor "code --wait"  - to configure git editor to open with vscode instead of VIM
git config --global user.name "Bright Jiwueze"  - To add name to your git account 
git config --global user.email "myemailaddress"  - To add email to your git account
git commit -m "commit message" - To commit to the repository
touch .gitingnore  - where you can save from the public
git branch - To know the branch you are working on
git branch <branchname> to create a branch
git checkout <branchname> or git switch <branchname> to got to another branch
git switch -c <branchname> will create a new branch and will automatically move you to that branch
#Code commited from another branch will not be seen in the other branches except when merged. Another exception to this is the first commit, it will be seen by all the branches created later#
git merge <branchname> to merge a branch to another branch. However, since the idea is to merge a branch to the main branch please, run the change on the main (master) branch and then run the merge command there to merge the other branch.
#Point of conflit is when different branches were used to write additional codes to a file. just like when two persons are fixing bug from different branches. This can make the code look different when viewed from the branches used in the bug fix. This can be detected during merging and must be corrected. Just keep what you need and delete what you don't need.
git diff --staged This command checks the difference between a version of a file that has been commited and a version that is staged. i.e. When you correct codes in a commited file, and then stage it. before commiting it, you can check the difference between the staged file and the earlier commited version.
git diff <commitid> <commitid> or git diff <commitid>..<commitid>to check differences between commit ids
git diff <branchone> <branchtwo> to check differences between two branches
git stash can be used to temporarily save changes or files created on a branch before moving to another branch. Note that if you start working on a branch, you can't move to another branch without commiting the already existing job in your current branch. You can stash the job and move to another branch then come back to the branch again and call the job back with "git stash pop". Note that you can also call the job on your new branch with the same earlier command. "git stash list" will list all jobs on stash.
git rebase master  - adding all branches to the master branch to become one. Please run this command on another branch not on the master branch.
git show <commitnumber> - to capture information from any commit

GitHub

Create a repository in your GitHub account
git branch -M main - To change master branch to main (This is your choice to give your branch any name and change it to any name)
Create an ssh key to remote your GitHub online account following this guide: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/testing-your-ssh-connection

git remote -v  - to check if there is a connection to the remote repository
git remote add origin https://github.com/BJ1995/weather_API.git  - connect to the remote repository - origin
git remote remove name (to change origin into a name of your choice)
git remote rename oldname newname
git remote set-url origin git@github.com:BJ1995/weather_API.git - to change the url that you added
git push -u origin main  - To push the main branch to the remote repository
git push origin main - can also work but it will set an upstream that will cause you to use "git push" for other transfers.
git pull <repository address> can be used to pull a repository.


